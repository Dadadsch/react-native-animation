/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei/native';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Ch36: THREE.SkinnedMesh;
    mixamorig1Hips: THREE.Bone;
  };
  materials: {
    Ch36_Body: THREE.MeshPhysicalMaterial;
  };
};

export default function Character(props: JSX.IntrinsicElements['group']) {
  const ActionName = 'ArmatureAction';
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    require('../assets/ErsterTest1.glb'),
  ) as GLTFResult;

  // Lade die Texturen
  const textureLoader = new THREE.TextureLoader();
  const normalMap = textureLoader.load(require('../assets/skin-normal.png'));
  const roughnessMap = textureLoader.load(require('../assets/skin-rough.jpg'));
  const subsurfaceMap = textureLoader.load(require('../assets/skin-subsurface.jpg'));

  // Überarbeiten des Materials für menschenähnliche Haut
  materials.Ch36_Body = new THREE.MeshPhysicalMaterial({
    color: new THREE.Color(0xffc1a1), // Helle Hautfarbe, passe diesen Wert nach Bedarf an
    metalness: 0.4, // Haut ist nicht metallisch
    roughness: 0.6, // Haut hat eine gewisse Rauheit
    clearcoat: 0.3, // Leichte Glanzschicht für den Glanz der Haut
    clearcoatRoughness: 0.3, // Glanz nicht zu scharf
    normalMap: normalMap, // Normal Map für Hautdetails
    roughnessMap: roughnessMap, // Roughness Map für unterschiedliche Hautrauheit
    lightMap: subsurfaceMap, // Subsurface Map für Streuung des Lichts unter der Haut
    //subsurface: 0.7, // Subsurface Scattering für realistischeres Aussehen
    reflectivity: 0.5, // Lichtreflektion für lebendigeren Eindruck
    sheen: 0.5, // Leichtes Schimmern
  });

  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    actions[ActionName]?.play();
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Armature"
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}>
          <skinnedMesh
            name="Ch36"
            geometry={nodes.Ch36.geometry}
            material={materials.Ch36_Body}
            skeleton={nodes.Ch36.skeleton}
          />
          <primitive object={nodes.mixamorig1Hips} />
        </group>
      </group>
    </group>
  );
}

//useGLTF.preload('/ErsterTest.glb')
